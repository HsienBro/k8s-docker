name: CI workflow

on:
  push:
    branches: [master]
  pull_request:
    branches: [ master ]

jobs:
  Check_unit_test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.12.0'

    - name: Install backend dependencies 
      working-directory: ./backend
      run: npm install

    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm install

    - name: Run unit test
      working-directory: ./backend
      run: |
        npm run test
        if [ $? -eq 0 ]
        then
          exit 0
        else
          exit 1
        fi

  Check_coverage_report:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.12.0'

    - name: Install dependencies
      working-directory: ./backend
      run: npm install

    - name: Check if current coverage is higher
      working-directory: ./backend
      run: | 
        npm run test > coverage_report_new.txt

        if [ ! -f coverage_report_old.txt ]; then
          mv coverage_report_new.txt coverage_report_old.txt
          exit 0
        fi

        old_coverage=$(grep 'All files' coverage_report_old.txt | awk '{print $4}' )
        new_coverage=$(grep 'All files' coverage_report_new.txt | awk '{print $4}' )

        if (( $(echo "$new_coverage < $old_coverage" | bc -l) )); then
          exit 1
        else
          mv coverage_report_new.txt coverage_report_old.txt
          exit 0
        fi

    - name: Archive coverage results
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: backend
  
  Check_formatter:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.12.0'

    - name: Install dependencies
      run: npm install 
      
    - name: Check if files are formatted
      id: check_format
      run: |
        if ! npx prettier --check **.ts; then
          echo 'formatted=true' >> $GITHUB_ENV
        fi

    - name: Format and commit files
      if: env.formatted == 'true'
      run: |
        npm run format
        git config --global user.name 'HsienBro'
        git config --global user.email 'antony405@gmail.com'
        git add .
        git commit -m "style: format files"
        git push origin master


    
